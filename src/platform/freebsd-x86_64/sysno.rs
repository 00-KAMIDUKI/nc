// Code generated by mksysnum_freebsd.py; DO NOT EDIT.

pub type Sysno = usize;

pub const SYS_NOSYS: Sysno = 0; // { int nosys(void); } syscall nosys_args int
pub const SYS_EXIT: Sysno = 1; // { void sys_exit(int rval); } exit sys_exit_args void
pub const SYS_FORK: Sysno = 2; // { int fork(void); }
pub const SYS_READ: Sysno = 3; // { ssize_t read(int fd, _Out_writes_bytes_(nbyte) void *buf, size_t nbyte); }
pub const SYS_WRITE: Sysno = 4; // { ssize_t write(int fd, _In_reads_bytes_(nbyte) const void *buf, size_t nbyte); }
pub const SYS_OPEN: Sysno = 5; // { int open( _In_z_ char *path, int flags, int mode); }
pub const SYS_CLOSE: Sysno = 6; // { int close(int fd); }
pub const SYS_WAIT4: Sysno = 7; // { int wait4(int pid, _Out_opt_ int *status, int options, _Out_opt_ struct rusage *rusage); }
pub const SYS_LINK: Sysno = 9; // { int link(_In_z_ char *path, _In_z_ char *link); }
pub const SYS_UNLINK: Sysno = 10; // { int unlink(_In_z_ char *path); }
pub const SYS_CHDIR: Sysno = 12; // { int chdir(_In_z_ char *path); }
pub const SYS_FCHDIR: Sysno = 13; // { int fchdir(int fd); }
pub const SYS_CHMOD: Sysno = 15; // { int chmod(_In_z_ char *path, int mode); }
pub const SYS_CHOWN: Sysno = 16; // { int chown(_In_z_ char *path, int uid, int gid); }
pub const SYS_BREAK: Sysno = 17; // { caddr_t break(_In_ char *nsize); }
pub const SYS_GETPID: Sysno = 20; // { pid_t getpid(void); }
pub const SYS_MOUNT: Sysno = 21; // { int mount(_In_z_ char *type, _In_z_ char *path, int flags, _In_opt_ caddr_t data); }
pub const SYS_UNMOUNT: Sysno = 22; // { int unmount(_In_z_ char *path, int flags); }
pub const SYS_SETUID: Sysno = 23; // { int setuid(uid_t uid); }
pub const SYS_GETUID: Sysno = 24; // { uid_t getuid(void); }
pub const SYS_GETEUID: Sysno = 25; // { uid_t geteuid(void); }
pub const SYS_PTRACE: Sysno = 26; // { int ptrace(int req, pid_t pid, _Inout_opt_ caddr_t addr, int data); }
pub const SYS_RECVMSG: Sysno = 27; // { int recvmsg(int s, _Inout_ struct msghdr *msg, int flags); }
pub const SYS_SENDMSG: Sysno = 28; // { int sendmsg(int s, _In_ struct msghdr *msg, int flags); }
pub const SYS_RECVFROM: Sysno = 29; // { int recvfrom(int s, _Out_writes_bytes_(len) caddr_t buf, size_t len, int flags, _Out_writes_bytes_opt_(*fromlenaddr) struct sockaddr * __restrict from, _Inout_opt_ __socklen_t * __restrict fromlenaddr); }
pub const SYS_ACCEPT: Sysno = 30; // { int accept(int s, _Out_writes_bytes_opt_(*anamelen) struct sockaddr * __restrict name, _Inout_opt_ __socklen_t * __restrict anamelen); }
pub const SYS_GETPEERNAME: Sysno = 31; // { int getpeername(int fdes, _Out_writes_bytes_(*alen) struct sockaddr * __restrict asa, _Inout_opt_ __socklen_t * __restrict alen); }
pub const SYS_GETSOCKNAME: Sysno = 32; // { int getsockname(int fdes, _Out_writes_bytes_(*alen) struct sockaddr * __restrict asa, _Inout_ __socklen_t * __restrict alen); }
pub const SYS_ACCESS: Sysno = 33; // { int access(_In_z_ char *path, int amode); }
pub const SYS_CHFLAGS: Sysno = 34; // { int chflags(_In_z_ const char *path, u_long flags); }
pub const SYS_FCHFLAGS: Sysno = 35; // { int fchflags(int fd, u_long flags); }
pub const SYS_SYNC: Sysno = 36; // { int sync(void); }
pub const SYS_KILL: Sysno = 37; // { int kill(int pid, int signum); }
pub const SYS_GETPPID: Sysno = 39; // { pid_t getppid(void); }
pub const SYS_DUP: Sysno = 41; // { int dup(u_int fd); }
pub const SYS_GETEGID: Sysno = 43; // { gid_t getegid(void); }
pub const SYS_PROFIL: Sysno = 44; // { int profil( _Out_writes_bytes_(size) caddr_t samples, size_t size, size_t offset, u_int scale); }
pub const SYS_KTRACE: Sysno = 45; // { int ktrace(_In_z_ const char *fname, int ops, int facs, int pid); }
pub const SYS_GETGID: Sysno = 47; // { gid_t getgid(void); }
pub const SYS_GETLOGIN: Sysno = 49; // { int getlogin( _Out_writes_z_(namelen) char *namebuf, u_int namelen); }
pub const SYS_SETLOGIN: Sysno = 50; // { int setlogin(_In_z_ char *namebuf); }
pub const SYS_ACCT: Sysno = 51; // { int acct(_In_z_ char *path); }
pub const SYS_SIGALTSTACK: Sysno = 53; // { int sigaltstack(_In_opt_ stack_t *ss, _Out_opt_ stack_t *oss); }
pub const SYS_IOCTL: Sysno = 54; // { int ioctl(int fd, u_long com, _Inout_opt_ caddr_t data); }
pub const SYS_REBOOT: Sysno = 55; // { int reboot(int opt); }
pub const SYS_REVOKE: Sysno = 56; // { int revoke(_In_z_ char *path); }
pub const SYS_SYMLINK: Sysno = 57; // { int symlink(_In_z_ char *path, _In_z_ char *link); }
pub const SYS_READLINK: Sysno = 58; // { ssize_t readlink(_In_z_ char *path, _Out_writes_z_(count) char *buf, size_t count); }
pub const SYS_EXECVE: Sysno = 59; // { int execve( _In_z_ char *fname, _In_z_ char **argv, _In_z_ char **envv); }
pub const SYS_UMASK: Sysno = 60; // { int umask(int newmask); }
pub const SYS_CHROOT: Sysno = 61; // { int chroot(_In_z_ char *path); }
pub const SYS_MSYNC: Sysno = 65; // { int msync(_In_ void *addr, size_t len, int flags); }
pub const SYS_VFORK: Sysno = 66; // { int vfork(void); }
pub const SYS_SBRK: Sysno = 69; // { int sbrk(int incr); }
pub const SYS_SSTK: Sysno = 70; // { int sstk(int incr); }
pub const SYS_MUNMAP: Sysno = 73; // { int munmap(_In_ void *addr, size_t len); }
pub const SYS_MPROTECT: Sysno = 74; // { int mprotect(_In_ void *addr, size_t len, int prot); }
pub const SYS_MADVISE: Sysno = 75; // { int madvise(_In_ void *addr, size_t len, int behav); }
pub const SYS_MINCORE: Sysno = 78; // { int mincore( _In_ const void *addr, size_t len, _Out_writes_bytes_(len/PAGE_SIZE) char *vec); }
pub const SYS_GETGROUPS: Sysno = 79; // { int getgroups(u_int gidsetsize, _Out_writes_opt_(gidsetsize) gid_t *gidset); }
pub const SYS_SETGROUPS: Sysno = 80; // { int setgroups(u_int gidsetsize, _In_reads_(gidsetsize) gid_t *gidset); }
pub const SYS_GETPGRP: Sysno = 81; // { int getpgrp(void); }
pub const SYS_SETPGID: Sysno = 82; // { int setpgid(int pid, int pgid); }
pub const SYS_SETITIMER: Sysno = 83; // { int setitimer(u_int which, _In_ struct itimerval *itv, _Out_opt_ struct itimerval *oitv); }
pub const SYS_SWAPON: Sysno = 85; // { int swapon(_In_z_ char *name); }
pub const SYS_GETITIMER: Sysno = 86; // { int getitimer(u_int which, _Out_ struct itimerval *itv); }
pub const SYS_GETDTABLESIZE: Sysno = 89; // { int getdtablesize(void); }
pub const SYS_DUP2: Sysno = 90; // { int dup2(u_int from, u_int to); }
pub const SYS_FCNTL: Sysno = 92; // { int fcntl(int fd, int cmd, long arg); }
pub const SYS_SELECT: Sysno = 93; // { int select(int nd, _Inout_opt_ fd_set *in, _Inout_opt_ fd_set *ou, _Inout_opt_ fd_set *ex, _In_opt_ struct timeval *tv); }
pub const SYS_FSYNC: Sysno = 95; // { int fsync(int fd); }
pub const SYS_SETPRIORITY: Sysno = 96; // { int setpriority(int which, int who, int prio); }
pub const SYS_SOCKET: Sysno = 97; // { int socket(int domain, int type, int protocol); }
pub const SYS_CONNECT: Sysno = 98; // { int connect(int s, _In_reads_bytes_(namelen) caddr_t name, int namelen); }
pub const SYS_GETPRIORITY: Sysno = 100; // { int getpriority(int which, int who); }
pub const SYS_BIND: Sysno = 104; // { int bind(int s, _In_reads_bytes_(namelen) caddr_t name, int namelen); }
pub const SYS_SETSOCKOPT: Sysno = 105; // { int setsockopt(int s, int level, int name, _In_reads_bytes_opt_(valsize) caddr_t val, int valsize); }
pub const SYS_LISTEN: Sysno = 106; // { int listen(int s, int backlog); }
pub const SYS_GETTIMEOFDAY: Sysno = 116; // { int gettimeofday( _Out_ struct timeval *tp, _Out_opt_ struct timezone *tzp); }
pub const SYS_GETRUSAGE: Sysno = 117; // { int getrusage(int who, _Out_ struct rusage *rusage); }
pub const SYS_GETSOCKOPT: Sysno = 118; // { int getsockopt(int s, int level, int name, _Out_writes_bytes_opt_(*avalsize) caddr_t val, _Inout_ int *avalsize); }
pub const SYS_READV: Sysno = 120; // { int readv(int fd, _Inout_updates_(iovcnt) struct iovec *iovp, u_int iovcnt); }
pub const SYS_WRITEV: Sysno = 121; // { int writev(int fd, _In_reads_opt_(iovcnt) struct iovec *iovp, u_int iovcnt); }
pub const SYS_SETTIMEOFDAY: Sysno = 122; // { int settimeofday( _In_ struct timeval *tv, _In_opt_ struct timezone *tzp); }
pub const SYS_FCHOWN: Sysno = 123; // { int fchown(int fd, int uid, int gid); }
pub const SYS_FCHMOD: Sysno = 124; // { int fchmod(int fd, int mode); }
pub const SYS_SETREUID: Sysno = 126; // { int setreuid(int ruid, int euid); }
pub const SYS_SETREGID: Sysno = 127; // { int setregid(int rgid, int egid); }
pub const SYS_RENAME: Sysno = 128; // { int rename(_In_z_ char *from, _In_z_ char *to); }
pub const SYS_FLOCK: Sysno = 131; // { int flock(int fd, int how); }
pub const SYS_MKFIFO: Sysno = 132; // { int mkfifo(_In_z_ char *path, int mode); }
pub const SYS_SENDTO: Sysno = 133; // { int sendto(int s, _In_reads_bytes_(len) caddr_t buf, size_t len, int flags, _In_reads_bytes_opt_(tolen) caddr_t to, int tolen); }
pub const SYS_SHUTDOWN: Sysno = 134; // { int shutdown(int s, int how); }
pub const SYS_SOCKETPAIR: Sysno = 135; // { int socketpair(int domain, int type, int protocol, _Out_writes_(2) int *rsv); }
pub const SYS_MKDIR: Sysno = 136; // { int mkdir(_In_z_ char *path, int mode); }
pub const SYS_RMDIR: Sysno = 137; // { int rmdir(_In_z_ char *path); }
pub const SYS_UTIMES: Sysno = 138; // { int utimes(_In_z_ char *path, _In_ struct timeval *tptr); }
pub const SYS_ADJTIME: Sysno = 140; // { int adjtime(_In_ struct timeval *delta, _Out_opt_ struct timeval *olddelta); }
pub const SYS_SETSID: Sysno = 147; // { int setsid(void); }
pub const SYS_QUOTACTL: Sysno = 148; // { int quotactl( _In_z_ char *path, int cmd, int uid, _In_ caddr_t arg); }
pub const SYS_LGETFH: Sysno = 160; // { int lgetfh(_In_z_ char *fname, _Out_ struct fhandle *fhp); }
pub const SYS_GETFH: Sysno = 161; // { int getfh(_In_z_ char *fname, _Out_ struct fhandle *fhp); }
pub const SYS_SYSARCH: Sysno = 165; // { int sysarch(int op, _In_z_ char *parms); }
pub const SYS_RTPRIO: Sysno = 166; // { int rtprio(int function, pid_t pid, _Inout_ struct rtprio *rtp); }
pub const SYS_SETFIB: Sysno = 175; // { int setfib(int fibnum); }
pub const SYS_NTP_ADJTIME: Sysno = 176; // { int ntp_adjtime(_Inout_ struct timex *tp); }
pub const SYS_SETGID: Sysno = 181; // { int setgid(gid_t gid); }
pub const SYS_SETEGID: Sysno = 182; // { int setegid(gid_t egid); }
pub const SYS_SETEUID: Sysno = 183; // { int seteuid(uid_t euid); }
pub const SYS_PATHCONF: Sysno = 191; // { int pathconf(_In_z_ char *path, int name); }
pub const SYS_FPATHCONF: Sysno = 192; // { int fpathconf(int fd, int name); }
pub const SYS_GETRLIMIT: Sysno = 194; // { int getrlimit(u_int which, _Out_ struct rlimit *rlp); } getrlimit __getrlimit_args int
pub const SYS_SETRLIMIT: Sysno = 195; // { int setrlimit(u_int which, _In_ struct rlimit *rlp); } setrlimit __setrlimit_args int
pub const SYS___SYSCTL: Sysno = 202; // { int __sysctl( _In_reads_(namelen) int *name, u_int namelen, _Out_writes_bytes_opt_(*oldlenp) void *old, _Inout_opt_ size_t *oldlenp, _In_reads_bytes_opt_(newlen) void *new, size_t newlen); } __sysctl sysctl_args int
pub const SYS_MLOCK: Sysno = 203; // { int mlock(_In_ const void *addr, size_t len); }
pub const SYS_MUNLOCK: Sysno = 204; // { int munlock(_In_ const void *addr, size_t len); }
pub const SYS_UNDELETE: Sysno = 205; // { int undelete(_In_z_ char *path); }
pub const SYS_FUTIMES: Sysno = 206; // { int futimes(int fd, _In_reads_(2) struct timeval *tptr); }
pub const SYS_GETPGID: Sysno = 207; // { int getpgid(pid_t pid); }
pub const SYS_POLL: Sysno = 209; // { int poll( _Inout_updates_(nfds) struct pollfd *fds, u_int nfds, int timeout); }
pub const SYS_CLOCK_GETTIME: Sysno = 232; // { int clock_gettime(clockid_t clock_id, _Out_ struct timespec *tp); }
pub const SYS_CLOCK_SETTIME: Sysno = 233; // { int clock_settime(clockid_t clock_id, _In_ const struct timespec *tp); }
pub const SYS_CLOCK_GETRES: Sysno = 234; // { int clock_getres(clockid_t clock_id, _Out_ struct timespec *tp); }
pub const SYS_KTIMER_CREATE: Sysno = 235; // { int ktimer_create( clockid_t clock_id, _In_ struct sigevent *evp, _Out_ int *timerid); }
pub const SYS_KTIMER_DELETE: Sysno = 236; // { int ktimer_delete(int timerid); }
pub const SYS_KTIMER_SETTIME: Sysno = 237; // { int ktimer_settime(int timerid, int flags, _In_ const struct itimerspec *value, _Out_opt_ struct itimerspec *ovalue); }
pub const SYS_KTIMER_GETTIME: Sysno = 238; // { int ktimer_gettime(int timerid, _Out_ struct itimerspec *value); }
pub const SYS_KTIMER_GETOVERRUN: Sysno = 239; // { int ktimer_getoverrun(int timerid); }
pub const SYS_NANOSLEEP: Sysno = 240; // { int nanosleep( _In_ const struct timespec *rqtp, _Out_opt_ struct timespec *rmtp); }
pub const SYS_FFCLOCK_GETCOUNTER: Sysno = 241; // { int ffclock_getcounter( _Out_ ffcounter *ffcount); }
pub const SYS_FFCLOCK_SETESTIMATE: Sysno = 242; // { int ffclock_setestimate( _In_ struct ffclock_estimate *cest); }
pub const SYS_FFCLOCK_GETESTIMATE: Sysno = 243; // { int ffclock_getestimate( _Out_ struct ffclock_estimate *cest); }
pub const SYS_CLOCK_NANOSLEEP: Sysno = 244; // { int clock_nanosleep(clockid_t clock_id, int flags, _In_ const struct timespec *rqtp, _Out_opt_ struct timespec *rmtp); }
pub const SYS_CLOCK_GETCPUCLOCKID2: Sysno = 247; // { int clock_getcpuclockid2(id_t id, int which, _Out_ clockid_t *clock_id); }
pub const SYS_NTP_GETTIME: Sysno = 248; // { int ntp_gettime( _Out_ struct ntptimeval *ntvp); }
pub const SYS_MINHERIT: Sysno = 250; // { int minherit( _In_ void *addr, size_t len, int inherit); }
pub const SYS_RFORK: Sysno = 251; // { int rfork(int flags); }
pub const SYS_ISSETUGID: Sysno = 253; // { int issetugid(void); }
pub const SYS_LCHOWN: Sysno = 254; // { int lchown(_In_z_ char *path, int uid, int gid); }
pub const SYS_AIO_READ: Sysno = 255; // { int aio_read( _Inout_ struct aiocb *aiocbp); }
pub const SYS_AIO_WRITE: Sysno = 256; // { int aio_write( _Inout_ struct aiocb *aiocbp); }
pub const SYS_LIO_LISTIO: Sysno = 257; // { int lio_listio(int mode, _Inout_updates_(nent) struct aiocb* const *acb_list, int nent, _In_opt_ struct sigevent *sig); }
pub const SYS_LCHMOD: Sysno = 274; // { int lchmod(_In_z_ char *path, mode_t mode); }
pub const SYS_LUTIMES: Sysno = 276; // { int lutimes(_In_z_ char *path, _In_ struct timeval *tptr); }
pub const SYS_PREADV: Sysno = 289; // { ssize_t preadv(int fd, _In_reads_(iovcnt) struct iovec *iovp, u_int iovcnt, off_t offset); }
pub const SYS_PWRITEV: Sysno = 290; // { ssize_t pwritev(int fd, _In_reads_(iovcnt) struct iovec *iovp, u_int iovcnt, off_t offset); }
pub const SYS_FHOPEN: Sysno = 298; // { int fhopen( _In_ const struct fhandle *u_fhp, int flags); }
pub const SYS_MODNEXT: Sysno = 300; // { int modnext(int modid); }
pub const SYS_MODSTAT: Sysno = 301; // { int modstat(int modid, _Out_ struct module_stat* stat); }
pub const SYS_MODFNEXT: Sysno = 302; // { int modfnext(int modid); }
pub const SYS_MODFIND: Sysno = 303; // { int modfind(_In_z_ const char *name); }
pub const SYS_KLDLOAD: Sysno = 304; // { int kldload(_In_z_ const char *file); }
pub const SYS_KLDUNLOAD: Sysno = 305; // { int kldunload(int fileid); }
pub const SYS_KLDFIND: Sysno = 306; // { int kldfind(_In_z_ const char *file); }
pub const SYS_KLDNEXT: Sysno = 307; // { int kldnext(int fileid); }
pub const SYS_KLDSTAT: Sysno = 308; // { int kldstat(int fileid, _Out_ struct kld_file_stat *stat); }
pub const SYS_KLDFIRSTMOD: Sysno = 309; // { int kldfirstmod(int fileid); }
pub const SYS_GETSID: Sysno = 310; // { int getsid(pid_t pid); }
pub const SYS_SETRESUID: Sysno = 311; // { int setresuid(uid_t ruid, uid_t euid, uid_t suid); }
pub const SYS_SETRESGID: Sysno = 312; // { int setresgid(gid_t rgid, gid_t egid, gid_t sgid); }
pub const SYS_AIO_RETURN: Sysno = 314; // { ssize_t aio_return( _Inout_ struct aiocb *aiocbp); }
pub const SYS_AIO_SUSPEND: Sysno = 315; // { int aio_suspend( _Inout_updates_(nent) struct aiocb * const * aiocbp, int nent, _In_opt_ const struct timespec *timeout); }
pub const SYS_AIO_CANCEL: Sysno = 316; // { int aio_cancel(int fd, _In_opt_ struct aiocb *aiocbp); }
pub const SYS_AIO_ERROR: Sysno = 317; // { int aio_error( _In_ struct aiocb *aiocbp); }
pub const SYS_YIELD: Sysno = 321; // { int yield(void); }
pub const SYS_MLOCKALL: Sysno = 324; // { int mlockall(int how); }
pub const SYS_MUNLOCKALL: Sysno = 325; // { int munlockall(void); }
pub const SYS___GETCWD: Sysno = 326; // { int __getcwd( _Out_writes_z_(buflen) char *buf, size_t buflen); }
pub const SYS_SCHED_SETPARAM: Sysno = 327; // { int sched_setparam (pid_t pid, _In_ const struct sched_param *param); }
pub const SYS_SCHED_GETPARAM: Sysno = 328; // { int sched_getparam (pid_t pid, _Out_ struct sched_param *param); }
pub const SYS_SCHED_SETSCHEDULER: Sysno = 329; // { int sched_setscheduler (pid_t pid, int policy, _In_ const struct sched_param *param); }
pub const SYS_SCHED_GETSCHEDULER: Sysno = 330; // { int sched_getscheduler (pid_t pid); }
pub const SYS_SCHED_YIELD: Sysno = 331; // { int sched_yield (void); }
pub const SYS_SCHED_GET_PRIORITY_MAX: Sysno = 332; // { int sched_get_priority_max (int policy); }
pub const SYS_SCHED_GET_PRIORITY_MIN: Sysno = 333; // { int sched_get_priority_min (int policy); }
pub const SYS_SCHED_RR_GET_INTERVAL: Sysno = 334; // { int sched_rr_get_interval (pid_t pid, _Out_ struct timespec *interval); }
pub const SYS_UTRACE: Sysno = 335; // { int utrace( _In_reads_bytes_(len) const void *addr, size_t len); }
pub const SYS_KLDSYM: Sysno = 337; // { int kldsym(int fileid, int cmd, _In_ void *data); }
pub const SYS_JAIL: Sysno = 338; // { int jail( _In_ struct jail *jail); }
pub const SYS_SIGPROCMASK: Sysno = 340; // { int sigprocmask(int how, _In_opt_ const sigset_t *set, _Out_opt_ sigset_t *oset); }
pub const SYS_SIGSUSPEND: Sysno = 341; // { int sigsuspend( _In_ const sigset_t *sigmask); }
pub const SYS_SIGPENDING: Sysno = 343; // { int sigpending(_In_ sigset_t *set); }
pub const SYS_SIGTIMEDWAIT: Sysno = 345; // { int sigtimedwait(_In_ const sigset_t *set, _Out_opt_ siginfo_t *info, _In_opt_ const struct timespec *timeout); }
pub const SYS_SIGWAITINFO: Sysno = 346; // { int sigwaitinfo(_In_ const sigset_t *set, _Out_opt_ siginfo_t *info); }
pub const SYS___ACL_GET_FILE: Sysno = 347; // { int __acl_get_file( _In_z_ const char *path, acl_type_t type, _Out_ struct acl *aclp); }
pub const SYS___ACL_SET_FILE: Sysno = 348; // { int __acl_set_file( _In_z_ const char *path, acl_type_t type, _In_ struct acl *aclp); }
pub const SYS___ACL_GET_FD: Sysno = 349; // { int __acl_get_fd(int filedes, acl_type_t type, _Out_ struct acl *aclp); }
pub const SYS___ACL_SET_FD: Sysno = 350; // { int __acl_set_fd(int filedes, acl_type_t type, _In_ struct acl *aclp); }
pub const SYS___ACL_DELETE_FILE: Sysno = 351; // { int __acl_delete_file( _In_z_ const char *path, acl_type_t type); }
pub const SYS___ACL_DELETE_FD: Sysno = 352; // { int __acl_delete_fd(int filedes, acl_type_t type); }
pub const SYS___ACL_ACLCHECK_FILE: Sysno = 353; // { int __acl_aclcheck_file( _In_z_ const char *path, acl_type_t type, _In_ struct acl *aclp); }
pub const SYS___ACL_ACLCHECK_FD: Sysno = 354; // { int __acl_aclcheck_fd(int filedes, acl_type_t type, _In_ struct acl *aclp); }
pub const SYS_EXTATTRCTL: Sysno = 355; // { int extattrctl(_In_z_ const char *path, int cmd, _In_z_opt_ const char *filename, int attrnamespace, _In_z_ const char *attrname); }
pub const SYS_EXTATTR_SET_FILE: Sysno = 356; // { ssize_t extattr_set_file( _In_z_ const char *path, int attrnamespace, _In_z_ const char *attrname, _In_reads_bytes_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_GET_FILE: Sysno = 357; // { ssize_t extattr_get_file( _In_z_ const char *path, int attrnamespace, _In_z_ const char *attrname, _Out_writes_bytes_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_DELETE_FILE: Sysno = 358; // { int extattr_delete_file( _In_z_ const char *path, int attrnamespace, _In_z_ const char *attrname); }
pub const SYS_AIO_WAITCOMPLETE: Sysno = 359; // { ssize_t aio_waitcomplete( _Outptr_result_maybenull_ struct aiocb **aiocbp, _In_opt_ struct timespec *timeout); }
pub const SYS_GETRESUID: Sysno = 360; // { int getresuid(_Out_opt_ uid_t *ruid, _Out_opt_ uid_t *euid, _Out_opt_ uid_t *suid); }
pub const SYS_GETRESGID: Sysno = 361; // { int getresgid(_Out_opt_ gid_t *rgid, _Out_opt_ gid_t *egid, _Out_opt_ gid_t *sgid); }
pub const SYS_KQUEUE: Sysno = 362; // { int kqueue(void); }
pub const SYS_EXTATTR_SET_FD: Sysno = 371; // { ssize_t extattr_set_fd(int fd, int attrnamespace, _In_z_ const char *attrname, _In_reads_bytes_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_GET_FD: Sysno = 372; // { ssize_t extattr_get_fd(int fd, int attrnamespace, _In_z_ const char *attrname, _Out_writes_bytes_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_DELETE_FD: Sysno = 373; // { int extattr_delete_fd(int fd, int attrnamespace, _In_z_ const char *attrname); }
pub const SYS___SETUGID: Sysno = 374; // { int __setugid(int flag); }
pub const SYS_EACCESS: Sysno = 376; // { int eaccess(_In_z_ char *path, int amode); }
pub const SYS_NMOUNT: Sysno = 378; // { int nmount( _In_reads_(iovcnt) struct iovec *iovp, unsigned int iovcnt, int flags); }
pub const SYS___MAC_GET_PROC: Sysno = 384; // { int __mac_get_proc( _In_ struct mac *mac_p); }
pub const SYS___MAC_SET_PROC: Sysno = 385; // { int __mac_set_proc( _In_ struct mac *mac_p); }
pub const SYS___MAC_GET_FD: Sysno = 386; // { int __mac_get_fd(int fd, _In_ struct mac *mac_p); }
pub const SYS___MAC_GET_FILE: Sysno = 387; // { int __mac_get_file( _In_z_ const char *path_p, _In_ struct mac *mac_p); }
pub const SYS___MAC_SET_FD: Sysno = 388; // { int __mac_set_fd(int fd, _In_ struct mac *mac_p); }
pub const SYS___MAC_SET_FILE: Sysno = 389; // { int __mac_set_file( _In_z_ const char *path_p, _In_ struct mac *mac_p); }
pub const SYS_KENV: Sysno = 390; // { int kenv(int what, _In_z_opt_ const char *name, _Inout_updates_opt_(len) char *value, int len); }
pub const SYS_LCHFLAGS: Sysno = 391; // { int lchflags(_In_z_ const char *path, u_long flags); }
pub const SYS_UUIDGEN: Sysno = 392; // { int uuidgen( _Out_writes_(count) struct uuid *store, int count); }
pub const SYS_SENDFILE: Sysno = 393; // { int sendfile(int fd, int s, off_t offset, size_t nbytes, _In_opt_ struct sf_hdtr *hdtr, _Out_opt_ off_t *sbytes, int flags); }
pub const SYS_MAC_SYSCALL: Sysno = 394; // { int mac_syscall( _In_z_ const char *policy, int call, _In_opt_ void *arg); }
pub const SYS___MAC_GET_PID: Sysno = 409; // { int __mac_get_pid(pid_t pid, _In_ struct mac *mac_p); }
pub const SYS___MAC_GET_LINK: Sysno = 410; // { int __mac_get_link( _In_z_ const char *path_p, _In_ struct mac *mac_p); }
pub const SYS___MAC_SET_LINK: Sysno = 411; // { int __mac_set_link( _In_z_ const char *path_p, _In_ struct mac *mac_p); }
pub const SYS_EXTATTR_SET_LINK: Sysno = 412; // { ssize_t extattr_set_link( _In_z_ const char *path, int attrnamespace, _In_z_ const char *attrname, _In_reads_bytes_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_GET_LINK: Sysno = 413; // { ssize_t extattr_get_link( _In_z_ const char *path, int attrnamespace, _In_z_ const char *attrname, _Out_writes_bytes_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_DELETE_LINK: Sysno = 414; // { int extattr_delete_link( _In_z_ const char *path, int attrnamespace, _In_z_ const char *attrname); }
pub const SYS___MAC_EXECVE: Sysno = 415; // { int __mac_execve(_In_z_ char *fname, _In_ char **argv, _In_ char **envv, _In_ struct mac *mac_p); }
pub const SYS_SIGACTION: Sysno = 416; // { int sigaction(int sig, _In_opt_ const struct sigaction *act, _Out_opt_ struct sigaction *oact); }
pub const SYS_SIGRETURN: Sysno = 417; // { int sigreturn( _In_ const struct __ucontext *sigcntxp); }
pub const SYS_GETCONTEXT: Sysno = 421; // { int getcontext( _Out_ struct __ucontext *ucp); }
pub const SYS_SETCONTEXT: Sysno = 422; // { int setcontext( _In_ const struct __ucontext *ucp); }
pub const SYS_SWAPCONTEXT: Sysno = 423; // { int swapcontext( _Out_ struct __ucontext *oucp, _In_ const struct __ucontext *ucp); }
pub const SYS_SWAPOFF: Sysno = 424; // { int swapoff(_In_z_ const char *name); }
pub const SYS___ACL_GET_LINK: Sysno = 425; // { int __acl_get_link( _In_z_ const char *path, acl_type_t type, _Out_ struct acl *aclp); }
pub const SYS___ACL_SET_LINK: Sysno = 426; // { int __acl_set_link( _In_z_ const char *path, acl_type_t type, _In_ struct acl *aclp); }
pub const SYS___ACL_DELETE_LINK: Sysno = 427; // { int __acl_delete_link( _In_z_ const char *path, acl_type_t type); }
pub const SYS___ACL_ACLCHECK_LINK: Sysno = 428; // { int __acl_aclcheck_link( _In_z_ const char *path, acl_type_t type, _In_ struct acl *aclp); }
pub const SYS_SIGWAIT: Sysno = 429; // { int sigwait(_In_ const sigset_t *set, _Out_ int *sig); }
pub const SYS_THR_CREATE: Sysno = 430; // { int thr_create(_In_ ucontext_t *ctx, _Out_ long *id, int flags); }
pub const SYS_THR_EXIT: Sysno = 431; // { void thr_exit(_Out_opt_ long *state); }
pub const SYS_THR_SELF: Sysno = 432; // { int thr_self(_Out_ long *id); }
pub const SYS_THR_KILL: Sysno = 433; // { int thr_kill(long id, int sig); }
pub const SYS_JAIL_ATTACH: Sysno = 436; // { int jail_attach(int jid); }
pub const SYS_EXTATTR_LIST_FD: Sysno = 437; // { ssize_t extattr_list_fd(int fd, int attrnamespace, _Out_writes_bytes_opt_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_LIST_FILE: Sysno = 438; // { ssize_t extattr_list_file( _In_z_ const char *path, int attrnamespace, _Out_writes_bytes_opt_(nbytes) void *data, size_t nbytes); }
pub const SYS_EXTATTR_LIST_LINK: Sysno = 439; // { ssize_t extattr_list_link( _In_z_ const char *path, int attrnamespace, _Out_writes_bytes_opt_(nbytes) void *data, size_t nbytes); }
pub const SYS_THR_SUSPEND: Sysno = 442; // { int thr_suspend( _In_opt_ const struct timespec *timeout); }
pub const SYS_THR_WAKE: Sysno = 443; // { int thr_wake(long id); }
pub const SYS_KLDUNLOADF: Sysno = 444; // { int kldunloadf(int fileid, int flags); }
pub const SYS_AUDIT: Sysno = 445; // { int audit( _In_reads_bytes_(length) const void *record, u_int length); }
pub const SYS_AUDITON: Sysno = 446; // { int auditon(int cmd, _In_opt_ void *data, u_int length); }
pub const SYS_GETAUID: Sysno = 447; // { int getauid(_Out_ uid_t *auid); }
pub const SYS_SETAUID: Sysno = 448; // { int setauid(_In_ uid_t *auid); }
pub const SYS_GETAUDIT: Sysno = 449; // { int getaudit( _Out_ struct auditinfo *auditinfo); }
pub const SYS_SETAUDIT: Sysno = 450; // { int setaudit( _In_ struct auditinfo *auditinfo); }
pub const SYS_GETAUDIT_ADDR: Sysno = 451; // { int getaudit_addr( _Out_writes_bytes_(length) struct auditinfo_addr *auditinfo_addr, u_int length); }
pub const SYS_SETAUDIT_ADDR: Sysno = 452; // { int setaudit_addr( _In_reads_bytes_(length) struct auditinfo_addr *auditinfo_addr, u_int length); }
pub const SYS_AUDITCTL: Sysno = 453; // { int auditctl(_In_z_ char *path); }
pub const SYS__UMTX_OP: Sysno = 454; // { int _umtx_op(_Inout_ void *obj, int op, u_long val, _In_ void *uaddr1, _In_ void *uaddr2); }
pub const SYS_THR_NEW: Sysno = 455; // { int thr_new(_In_ struct thr_param *param, int param_size); }
pub const SYS_SIGQUEUE: Sysno = 456; // { int sigqueue(pid_t pid, int signum, _In_ void *value); }
pub const SYS_ABORT2: Sysno = 463; // { int abort2(_In_z_ const char *why, int nargs, _In_reads_(nargs) void **args); }
pub const SYS_THR_SET_NAME: Sysno = 464; // { int thr_set_name(long id, _In_z_ const char *name); }
pub const SYS_AIO_FSYNC: Sysno = 465; // { int aio_fsync(int op, _In_ struct aiocb *aiocbp); }
pub const SYS_RTPRIO_THREAD: Sysno = 466; // { int rtprio_thread(int function, lwpid_t lwpid, _Inout_ struct rtprio *rtp); }
pub const SYS_PREAD: Sysno = 475; // { ssize_t pread(int fd, _Out_writes_bytes_(nbyte) void *buf, size_t nbyte, off_t offset); }
pub const SYS_PWRITE: Sysno = 476; // { ssize_t pwrite(int fd, _In_reads_bytes_(nbyte) const void *buf, size_t nbyte, off_t offset); }
pub const SYS_MMAP: Sysno = 477; // { caddr_t mmap(_In_ caddr_t addr, size_t len, int prot, int flags, int fd, off_t pos); }
pub const SYS_LSEEK: Sysno = 478; // { off_t lseek(int fd, off_t offset, int whence); }
pub const SYS_TRUNCATE: Sysno = 479; // { int truncate(_In_z_ char *path, off_t length); }
pub const SYS_FTRUNCATE: Sysno = 480; // { int ftruncate(int fd, off_t length); }
pub const SYS_THR_KILL2: Sysno = 481; // { int thr_kill2(pid_t pid, long id, int sig); }
pub const SYS_SHM_OPEN: Sysno = 482; // { int shm_open( _In_z_ const char *path, int flags, mode_t mode); }
pub const SYS_SHM_UNLINK: Sysno = 483; // { int shm_unlink(_In_z_ const char *path); }
pub const SYS_CPUSET: Sysno = 484; // { int cpuset(_Out_ cpusetid_t *setid); }
pub const SYS_CPUSET_SETID: Sysno = 485; // { int cpuset_setid(cpuwhich_t which, id_t id, cpusetid_t setid); }
pub const SYS_CPUSET_GETID: Sysno = 486; // { int cpuset_getid(cpulevel_t level, cpuwhich_t which, id_t id, _Out_ cpusetid_t *setid); }
pub const SYS_CPUSET_GETAFFINITY: Sysno = 487; // { int cpuset_getaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, _Out_ cpuset_t *mask); }
pub const SYS_CPUSET_SETAFFINITY: Sysno = 488; // { int cpuset_setaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, _Out_ const cpuset_t *mask); }
pub const SYS_FACCESSAT: Sysno = 489; // { int faccessat(int fd, _In_z_ char *path, int amode, int flag); }
pub const SYS_FCHMODAT: Sysno = 490; // { int fchmodat(int fd, _In_z_ char *path, mode_t mode, int flag); }
pub const SYS_FCHOWNAT: Sysno = 491; // { int fchownat(int fd, _In_z_ char *path, uid_t uid, gid_t gid, int flag); }
pub const SYS_FEXECVE: Sysno = 492; // { int fexecve(int fd, _In_ char **argv, _In_ char **envv); }
pub const SYS_FUTIMESAT: Sysno = 494; // { int futimesat(int fd, _In_z_ char *path, _In_reads_(2) struct timeval *times); }
pub const SYS_LINKAT: Sysno = 495; // { int linkat(int fd1, _In_z_ char *path1, int fd2, _In_z_ char *path2, int flag); }
pub const SYS_MKDIRAT: Sysno = 496; // { int mkdirat(int fd, _In_z_ char *path, mode_t mode); }
pub const SYS_MKFIFOAT: Sysno = 497; // { int mkfifoat(int fd, _In_z_ char *path, mode_t mode); }
pub const SYS_OPENAT: Sysno = 499; // { int openat(int fd, _In_z_ char *path, int flag, mode_t mode); }
pub const SYS_READLINKAT: Sysno = 500; // { int readlinkat(int fd, _In_z_ char *path, _Out_writes_bytes_(bufsize) char *buf, size_t bufsize); }
pub const SYS_RENAMEAT: Sysno = 501; // { int renameat(int oldfd, _In_z_ char *old, int newfd, _In_z_ char *new); }
pub const SYS_SYMLINKAT: Sysno = 502; // { int symlinkat(_In_z_ char *path1, int fd, _In_z_ char *path2); }
pub const SYS_UNLINKAT: Sysno = 503; // { int unlinkat(int fd, _In_z_ char *path, int flag); }
pub const SYS_POSIX_OPENPT: Sysno = 504; // { int posix_openpt(int flags); }
pub const SYS_JAIL_GET: Sysno = 506; // { int jail_get( _In_reads_(iovcnt) struct iovec *iovp, unsigned int iovcnt, int flags); }
pub const SYS_JAIL_SET: Sysno = 507; // { int jail_set( _In_reads_(iovcnt) struct iovec *iovp, unsigned int iovcnt, int flags); }
pub const SYS_JAIL_REMOVE: Sysno = 508; // { int jail_remove(int jid); }
pub const SYS_CLOSEFROM: Sysno = 509; // { int closefrom(int lowfd); }
pub const SYS_LPATHCONF: Sysno = 513; // { int lpathconf(_In_z_ char *path, int name); }
pub const SYS___CAP_RIGHTS_GET: Sysno = 515; // { int __cap_rights_get(int version, int fd, _Out_ cap_rights_t *rightsp); }
pub const SYS_CAP_ENTER: Sysno = 516; // { int cap_enter(void); }
pub const SYS_CAP_GETMODE: Sysno = 517; // { int cap_getmode(_Out_ u_int *modep); }
pub const SYS_PDFORK: Sysno = 518; // { int pdfork(_Out_ int *fdp, int flags); }
pub const SYS_PDKILL: Sysno = 519; // { int pdkill(int fd, int signum); }
pub const SYS_PDGETPID: Sysno = 520; // { int pdgetpid(int fd, _Out_ pid_t *pidp); }
pub const SYS_PSELECT: Sysno = 522; // { int pselect(int nd, _Inout_opt_ fd_set *in, _Inout_opt_ fd_set *ou, _Inout_opt_ fd_set *ex, _In_opt_ const struct timespec *ts, _In_opt_ const sigset_t *sm); }
pub const SYS_GETLOGINCLASS: Sysno = 523; // { int getloginclass( _Out_writes_z_(namelen) char *namebuf, size_t namelen); }
pub const SYS_SETLOGINCLASS: Sysno = 524; // { int setloginclass( _In_z_ const char *namebuf); }
pub const SYS_RCTL_GET_RACCT: Sysno = 525; // { int rctl_get_racct( _In_reads_bytes_(inbuflen) const void *inbufp, size_t inbuflen, _Out_writes_bytes_(outbuflen) void *outbufp, size_t outbuflen); }
pub const SYS_RCTL_GET_RULES: Sysno = 526; // { int rctl_get_rules( _In_reads_bytes_(inbuflen) const void *inbufp, size_t inbuflen, _Out_writes_bytes_(outbuflen) void *outbufp, size_t outbuflen); }
pub const SYS_RCTL_GET_LIMITS: Sysno = 527; // { int rctl_get_limits( _In_reads_bytes_(inbuflen) const void *inbufp, size_t inbuflen, _Out_writes_bytes_(outbuflen) void *outbufp, size_t outbuflen); }
pub const SYS_RCTL_ADD_RULE: Sysno = 528; // { int rctl_add_rule( _In_reads_bytes_(inbuflen) const void *inbufp, size_t inbuflen, _Out_writes_bytes_(outbuflen) void *outbufp, size_t outbuflen); }
pub const SYS_RCTL_REMOVE_RULE: Sysno = 529; // { int rctl_remove_rule( _In_reads_bytes_(inbuflen) const void *inbufp, size_t inbuflen, _Out_writes_bytes_(outbuflen) void *outbufp, size_t outbuflen); }
pub const SYS_POSIX_FALLOCATE: Sysno = 530; // { int posix_fallocate(int fd, off_t offset, off_t len); }
pub const SYS_POSIX_FADVISE: Sysno = 531; // { int posix_fadvise(int fd, off_t offset, off_t len, int advice); }
pub const SYS_WAIT6: Sysno = 532; // { int wait6(idtype_t idtype, id_t id, _Out_opt_ int *status, int options, _Out_opt_ struct __wrusage *wrusage, _Out_opt_ siginfo_t *info); }
pub const SYS_CAP_RIGHTS_LIMIT: Sysno = 533; // { int cap_rights_limit(int fd, _In_ cap_rights_t *rightsp); }
pub const SYS_CAP_IOCTLS_LIMIT: Sysno = 534; // { int cap_ioctls_limit(int fd, _In_reads_(ncmds) const u_long *cmds, size_t ncmds); }
pub const SYS_CAP_IOCTLS_GET: Sysno = 535; // { ssize_t cap_ioctls_get(int fd, _Out_writes_(maxcmds) u_long *cmds, size_t maxcmds); }
pub const SYS_CAP_FCNTLS_LIMIT: Sysno = 536; // { int cap_fcntls_limit(int fd, uint32_t fcntlrights); }
pub const SYS_CAP_FCNTLS_GET: Sysno = 537; // { int cap_fcntls_get(int fd, _Out_ uint32_t *fcntlrightsp); }
pub const SYS_BINDAT: Sysno = 538; // { int bindat(int fd, int s, _In_reads_bytes_(namelen) caddr_t name, int namelen); }
pub const SYS_CONNECTAT: Sysno = 539; // { int connectat(int fd, int s, _In_reads_bytes_(namelen) caddr_t name, int namelen); }
pub const SYS_CHFLAGSAT: Sysno = 540; // { int chflagsat(int fd, _In_z_ const char *path, u_long flags, int atflag); }
pub const SYS_ACCEPT4: Sysno = 541; // { int accept4(int s, _Out_writes_bytes_opt_(*anamelen) struct sockaddr * __restrict name, _Inout_opt_ __socklen_t * __restrict anamelen, int flags); }
pub const SYS_PIPE2: Sysno = 542; // { int pipe2(_Out_writes_(2) int *fildes, int flags); }
pub const SYS_AIO_MLOCK: Sysno = 543; // { int aio_mlock(_In_ struct aiocb *aiocbp); }
pub const SYS_PROCCTL: Sysno = 544; // { int procctl(idtype_t idtype, id_t id, int com, _In_opt_ void *data); }
pub const SYS_PPOLL: Sysno = 545; // { int ppoll( _Inout_updates_(nfds) struct pollfd *fds, u_int nfds, _In_opt_ const struct timespec *ts, _In_opt_ const sigset_t *set); }
pub const SYS_FUTIMENS: Sysno = 546; // { int futimens(int fd, _In_reads_(2) struct timespec *times); }
pub const SYS_UTIMENSAT: Sysno = 547; // { int utimensat(int fd, _In_z_ char *path, _In_reads_(2) struct timespec *times, int flag); }
pub const SYS_FDATASYNC: Sysno = 550; // { int fdatasync(int fd); }
pub const SYS_FSTAT: Sysno = 551; // { int fstat(int fd, _Out_ struct stat *sb); }
pub const SYS_FSTATAT: Sysno = 552; // { int fstatat(int fd, _In_z_ char *path, _Out_ struct stat *buf, int flag); }
pub const SYS_FHSTAT: Sysno = 553; // { int fhstat(_In_ const struct fhandle *u_fhp, _Out_ struct stat *sb); }
pub const SYS_GETDIRENTRIES: Sysno = 554; // { ssize_t getdirentries(int fd, _Out_writes_bytes_(count) char *buf, size_t count, _Out_ off_t *basep); }
pub const SYS_STATFS: Sysno = 555; // { int statfs(_In_z_ char *path, _Out_ struct statfs *buf); }
pub const SYS_FSTATFS: Sysno = 556; // { int fstatfs(int fd, _Out_ struct statfs *buf); }
pub const SYS_GETFSSTAT: Sysno = 557; // { int getfsstat( _Out_writes_bytes_opt_(bufsize) struct statfs *buf, long bufsize, int mode); }
pub const SYS_FHSTATFS: Sysno = 558; // { int fhstatfs( _In_ const struct fhandle *u_fhp, _Out_ struct statfs *buf); }
pub const SYS_MKNODAT: Sysno = 559; // { int mknodat(int fd, _In_z_ char *path, mode_t mode, dev_t dev); }
pub const SYS_KEVENT: Sysno = 560; // { int kevent(int fd, _In_reads_opt_(nchanges) struct kevent *changelist, int nchanges, _Out_writes_opt_(nevents) struct kevent *eventlist, int nevents, _In_opt_ const struct timespec *timeout); }
pub const SYS_CPUSET_GETDOMAIN: Sysno = 561; // { int cpuset_getdomain(cpulevel_t level, cpuwhich_t which, id_t id, size_t domainsetsize, _Out_writes_bytes_(domainsetsize) domainset_t *mask, _Out_ int *policy); }
pub const SYS_CPUSET_SETDOMAIN: Sysno = 562; // { int cpuset_setdomain(cpulevel_t level, cpuwhich_t which, id_t id, size_t domainsetsize, _In_ domainset_t *mask, int policy); }
pub const SYS_GETRANDOM: Sysno = 563; // { int getrandom( _Out_writes_bytes_(buflen) void *buf, size_t buflen, unsigned int flags); }
pub const SYS_GETFHAT: Sysno = 564; // { int getfhat( int fd, _In_z_ char *path, _Out_ struct fhandle *fhp, int flags ); }
pub const SYS_FHLINK: Sysno = 565; // { int fhlink( _In_ struct fhandle *fhp, _In_z_ const char *to ); }
pub const SYS_FHLINKAT: Sysno = 566; // { int fhlinkat( _In_ struct fhandle *fhp, int tofd, _In_z_ const char *to, ); }
pub const SYS_FHREADLINK: Sysno = 567; // { int fhreadlink( _In_ struct fhandle *fhp, _Out_writes_(bufsize) char *buf, size_t bufsize ); }
